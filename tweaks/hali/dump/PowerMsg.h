//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MKTMultiDictionary;

@interface PowerMsg : NSObject
{
    MKTMultiDictionary *_subTopic;	// 8 = 0x8
}

+ (void)requestTopicStatus:(long long)arg1 withTopic:(id)arg2 context:(id)arg3 withCallback:(CDUnknownBlockType)arg4;	// IMP=0x0000000101417d90
+ (void)requestTopicUserList:(long long)arg1 withTopic:(id)arg2 withIndex:(long long)arg3 pageSize:(long long)arg4 context:(id)arg5 withCallback:(CDUnknownBlockType)arg6;	// IMP=0x00000001014178e8
+ (void)requestHisMsgList:(long long)arg1 withTopic:(id)arg2 withCount:(long long)arg3 context:(id)arg4 withCallback:(CDUnknownBlockType)arg5;	// IMP=0x0000000101417208
+ (void)requestMsgList:(long long)arg1 withTopic:(id)arg2 withTime:(long long)arg3 context:(id)arg4 withCallback:(CDUnknownBlockType)arg5;	// IMP=0x0000000101416ef8
+ (void)bizSuccessCallback:(id)arg1 callback:(CDUnknownBlockType)arg2 resultDict:(id)arg3;	// IMP=0x0000000101416e5c
+ (void)bizCallback:(id)arg1 callback:(CDUnknownBlockType)arg2 result:(id)arg3;	// IMP=0x0000000101416ca8
+ (void)bizCallback:(id)arg1 callback:(CDUnknownBlockType)arg2 code:(long long)arg3;	// IMP=0x0000000101416b98
+ (id)bizSessionInvalidResult:(long long)arg1;	// IMP=0x0000000101416b78
+ (void)sendMessage:(long long)arg1 withMsg:(id)arg2 context:(id)arg3 withCallback:(CDUnknownBlockType)arg4;	// IMP=0x0000000101416680
+ (void)sendTextMessage:(long long)arg1 withMsg:(id)arg2 context:(id)arg3 withCallback:(CDUnknownBlockType)arg4;	// IMP=0x0000000101416178
+ (void)count:(long long)arg1 withTopic:(id)arg2 withAck:(_Bool)arg3 withParam:(id)arg4 context:(id)arg5 withCallback:(CDUnknownBlockType)arg6;	// IMP=0x0000000101415e88
+ (void)unSubscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 bizTag:(id)arg4 context:(id)arg5 withCallback:(CDUnknownBlockType)arg6;	// IMP=0x0000000101415c18
+ (void)unSubscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 bizKey:(id)arg4 bizTag:(id)arg5 context:(id)arg6 withCallback:(CDUnknownBlockType)arg7;	// IMP=0x00000001014159b4
+ (void)unSubscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 context:(id)arg4 withCallback:(CDUnknownBlockType)arg5;	// IMP=0x0000000101415918
+ (void)subscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 bizKey:(id)arg4 bizTag:(id)arg5 context:(id)arg6 withCallback:(CDUnknownBlockType)arg7;	// IMP=0x0000000101415688
+ (void)forceSubscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 bizTag:(id)arg4 context:(id)arg5 withCallback:(CDUnknownBlockType)arg6;	// IMP=0x0000000101415644
+ (void)subscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 bizTag:(id)arg4 context:(id)arg5 withCallback:(CDUnknownBlockType)arg6;	// IMP=0x00000001014153d4
+ (void)subscribe:(long long)arg1 withTopic:(id)arg2 from:(id)arg3 context:(id)arg4 withCallback:(CDUnknownBlockType)arg5;	// IMP=0x0000000101415338
+ (void)report:(long long)arg1 code:(long long)arg2 msg:(id)arg3;	// IMP=0x000000010141528c
+ (void)setMsgFetchMode:(long long)arg1 mode:(long long)arg2;	// IMP=0x0000000101415228
+ (void)registeBiz:(long long)arg1 bizKey:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x000000010141517c
+ (void)registeBiz:(long long)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x00000001014150f4
+ (void)registeBizImpl:(Class)arg1;	// IMP=0x00000001014150a0
+ (id)sharedInstance;	// IMP=0x0000000101414fb4
@property(retain, nonatomic) MKTMultiDictionary *subTopic; // @synthesize subTopic=_subTopic;
- (void).cxx_destruct;	// IMP=0x0000000101418270

@end

