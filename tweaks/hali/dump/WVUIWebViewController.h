//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WVRuleWebViewController.h"

@class NSString, NSTimer, NSURLRequest, UIColor, UIScrollView, UIView, WVUIErrorView, WVUILoadingBox, WVWebViewToolbar;

@interface WVUIWebViewController : WVRuleWebViewController
{
    WVWebViewToolbar *_toolbar;	// 8 = 0x8
    _Bool _usePullToRefresh;	// 16 = 0x10
    _Bool _useInfiniteScrolling;	// 17 = 0x11
    _Bool _useCustomPullToRefresh;	// 18 = 0x12
    _Bool _useToolbar;	// 19 = 0x13
    _Bool _showToolBarDynamic;	// 20 = 0x14
    _Bool _useToolbarOnlyError;	// 21 = 0x15
    _Bool _isShowLoadingBox;	// 22 = 0x16
    _Bool _isUseCustomToolBar;	// 23 = 0x17
    _Bool _useNavBtn;	// 24 = 0x18
    _Bool _useData;	// 25 = 0x19
    _Bool _useHtml;	// 26 = 0x1a
    _Bool _isUsedForLocalWebApp;	// 27 = 0x1b
    _Bool _isOpenPageUpdateAutomatic;	// 28 = 0x1c
    _Bool _isObservingWebView;	// 29 = 0x1d
    _Bool _toolbarHidden;	// 30 = 0x1e
    _Bool _pullToRefreshConfigured;	// 31 = 0x1f
    _Bool _requestIsTimeout;	// 32 = 0x20
    _Bool _haveFirstLoad;	// 33 = 0x21
    _Bool _automaticalyLoad;	// 34 = 0x22
    NSURLRequest *_loadRequest;	// 40 = 0x28
    double _navBarHeight;	// 48 = 0x30
    double _tabBarHeight;	// 56 = 0x38
    UIColor *_statusBarColor;	// 64 = 0x40
    double _toolbarHeight;	// 72 = 0x48
    id _customToolBarGoBackButton;	// 80 = 0x50
    id _customToolBarGoForwardButton;	// 88 = 0x58
    id _customToolBarStopLoadingButton;	// 96 = 0x60
    id _customToolBarRefreshButton;	// 104 = 0x68
    double _loadingMinDisplayTime;	// 112 = 0x70
    NSString *_navtitle;	// 120 = 0x78
    UIView *_statusBarView;	// 128 = 0x80
    double _oldPositionOfScroll;	// 136 = 0x88
    NSTimer *_timeoutTimer;	// 144 = 0x90
    WVUIErrorView *_errorView;	// 152 = 0x98
    WVUILoadingBox *_loadingBox;	// 160 = 0xa0
}

@property(nonatomic) _Bool automaticalyLoad; // @synthesize automaticalyLoad=_automaticalyLoad;
@property(retain, nonatomic) WVUILoadingBox *loadingBox; // @synthesize loadingBox=_loadingBox;
@property(retain, nonatomic) WVUIErrorView *errorView; // @synthesize errorView=_errorView;
@property(nonatomic) _Bool haveFirstLoad; // @synthesize haveFirstLoad=_haveFirstLoad;
@property(nonatomic) _Bool requestIsTimeout; // @synthesize requestIsTimeout=_requestIsTimeout;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(nonatomic) double oldPositionOfScroll; // @synthesize oldPositionOfScroll=_oldPositionOfScroll;
@property(nonatomic) _Bool pullToRefreshConfigured; // @synthesize pullToRefreshConfigured=_pullToRefreshConfigured;
@property(nonatomic) _Bool toolbarHidden; // @synthesize toolbarHidden=_toolbarHidden;
@property(retain, nonatomic) UIView *statusBarView; // @synthesize statusBarView=_statusBarView;
@property(nonatomic) _Bool isObservingWebView; // @synthesize isObservingWebView=_isObservingWebView;
@property(nonatomic) _Bool isOpenPageUpdateAutomatic; // @synthesize isOpenPageUpdateAutomatic=_isOpenPageUpdateAutomatic;
@property(nonatomic) _Bool isUsedForLocalWebApp; // @synthesize isUsedForLocalWebApp=_isUsedForLocalWebApp;
@property(nonatomic) _Bool useHtml; // @synthesize useHtml=_useHtml;
@property(nonatomic) _Bool useData; // @synthesize useData=_useData;
@property(nonatomic) _Bool useNavBtn; // @synthesize useNavBtn=_useNavBtn;
@property(retain, nonatomic) NSString *navtitle; // @synthesize navtitle=_navtitle;
@property(nonatomic) _Bool isUseCustomToolBar; // @synthesize isUseCustomToolBar=_isUseCustomToolBar;
@property(nonatomic) double loadingMinDisplayTime; // @synthesize loadingMinDisplayTime=_loadingMinDisplayTime;
@property(nonatomic) _Bool isShowLoadingBox; // @synthesize isShowLoadingBox=_isShowLoadingBox;
@property(nonatomic) __weak id customToolBarRefreshButton; // @synthesize customToolBarRefreshButton=_customToolBarRefreshButton;
@property(nonatomic) __weak id customToolBarStopLoadingButton; // @synthesize customToolBarStopLoadingButton=_customToolBarStopLoadingButton;
@property(nonatomic) __weak id customToolBarGoForwardButton; // @synthesize customToolBarGoForwardButton=_customToolBarGoForwardButton;
@property(nonatomic) __weak id customToolBarGoBackButton; // @synthesize customToolBarGoBackButton=_customToolBarGoBackButton;
@property(nonatomic, getter=isUseToolbarOnlyError) _Bool useToolbarOnlyError; // @synthesize useToolbarOnlyError=_useToolbarOnlyError;
@property(nonatomic) _Bool showToolBarDynamic; // @synthesize showToolBarDynamic=_showToolBarDynamic;
@property(nonatomic) double toolbarHeight; // @synthesize toolbarHeight=_toolbarHeight;
@property(nonatomic, getter=isUseToolbar) _Bool useToolbar; // @synthesize useToolbar=_useToolbar;
@property(retain, nonatomic) UIColor *statusBarColor; // @synthesize statusBarColor=_statusBarColor;
@property(nonatomic) double tabBarHeight; // @synthesize tabBarHeight=_tabBarHeight;
@property(nonatomic) double navBarHeight; // @synthesize navBarHeight=_navBarHeight;
@property(retain, nonatomic) NSURLRequest *loadRequest; // @synthesize loadRequest=_loadRequest;
- (void).cxx_destruct;	// IMP=0x0000000101b5a534
- (void)reloadWithNewParam:(id)arg1;	// IMP=0x0000000101b59c30
- (id)buildTagParamToUrl:(id)arg1;	// IMP=0x0000000101b59c14
- (id)removeTagParamFromUrl:(id)arg1;	// IMP=0x0000000101b59bf8
- (void)loadPageByUrlWithoutTag:(id)arg1;	// IMP=0x0000000101b59bac
- (void)loadPageByUrlWithTag:(id)arg1;	// IMP=0x0000000101b59b20
- (void)loadPageByUrl:(id)arg1 isPost:(_Bool)arg2;	// IMP=0x0000000101b59b10
- (_Bool)isValidateUrl:(id)arg1;	// IMP=0x0000000101b59b08
- (_Bool)isCurrentUrlIsValidate;	// IMP=0x0000000101b59b00
- (void)viewControllerWillEndLocalApp;	// IMP=0x0000000101b59af0
- (void)viewControllerWillStartByLocalApp;	// IMP=0x0000000101b59ae0
- (void)webViewLoadHTML:(id)arg1;	// IMP=0x0000000101b59adc
- (void)webViewLoadData:(id)arg1;	// IMP=0x0000000101b59ad8
@property(nonatomic) _Bool isOpenAudioAutoPlay;
- (void)openAutomaticalyLoad;	// IMP=0x0000000101b59aac
- (void)closeAutomaticalyLoad;	// IMP=0x0000000101b59a9c
- (_Bool)isErrorInfoViewShowing;	// IMP=0x0000000101b59a94
- (void)resumUsePullRefresh;	// IMP=0x0000000101b59a84
- (void)stopUsePullRefresh;	// IMP=0x0000000101b59a74
@property(nonatomic) _Bool useCustomPullRefresh;
@property(nonatomic) _Bool isUsePullRefresh;
- (id)getTopArrowTxtColor;	// IMP=0x0000000101b59a24
- (id)getPullRefreshFontSize;	// IMP=0x0000000101b59a0c
- (void)reload;	// IMP=0x0000000101b59a00
- (void)runLoadWAPage;	// IMP=0x0000000101b599fc
- (float)getArrowWidth;	// IMP=0x0000000101b599f4
- (float)getArrowHeight;	// IMP=0x0000000101b599ec
- (id)getArrowImage;	// IMP=0x0000000101b599d0
- (id)getBackgroundColor;	// IMP=0x0000000101b5995c
@property(nonatomic) _Bool useToolBarFirstLeftBtn;
@property(nonatomic) _Bool useToolBarOnlyError;
@property(nonatomic) _Bool isUseToolBar;
- (void)stopInfinitScrollAnimation;	// IMP=0x0000000101b59870
- (id)getStopLoadBtnImage;	// IMP=0x0000000101b59868
- (id)getRefreshBtnImage;	// IMP=0x0000000101b59860
- (id)getGoForwardBtnImage;	// IMP=0x0000000101b59858
- (id)getGoBackBtnImage;	// IMP=0x0000000101b59850
- (id)getFastTargetBtnImage;	// IMP=0x0000000101b59848
- (id)getToolBarBackgroundImage;	// IMP=0x0000000101b59840
- (float)getToolBarHeight;	// IMP=0x0000000101b59834
- (id)webview;	// IMP=0x0000000101b59828
- (void)showAlert:(id)arg1;	// IMP=0x0000000101b597a0
- (void)hiddenLoadingBox;	// IMP=0x0000000101b59674
- (void)showLoadingBoxWithTitle:(id)arg1;	// IMP=0x0000000101b595c4
- (void)showLoadingBox;	// IMP=0x0000000101b5956c
- (void)removeErrorView;	// IMP=0x0000000101b5948c
- (void)showErrorView:(id)arg1 didFailLoadWithError:(id)arg2;	// IMP=0x0000000101b593e4
- (void)loadPageTimeout;	// IMP=0x0000000101b59348
- (void)stopLoadPageTimer;	// IMP=0x0000000101b592d8
- (void)startLoadPageTimer;	// IMP=0x0000000101b592c0
- (void)stopLoadingPage;	// IMP=0x0000000101b5928c
- (void)startLoadingPage;	// IMP=0x0000000101b59168
- (void)canShowErrorView:(id)arg1 withCallback:(CDUnknownBlockType)arg2;	// IMP=0x0000000101b59040
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;	// IMP=0x0000000101b58d78
- (void)webViewDidFinishLoad:(id)arg1;	// IMP=0x0000000101b58cc8
- (void)webViewDidStartLoad:(id)arg1;	// IMP=0x0000000101b589f4
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;	// IMP=0x0000000101b588f0
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000101b5880c
- (void)configToolbarStyle;	// IMP=0x0000000101b585a8
- (void)configPullToRefreshStyle;	// IMP=0x0000000101b583f4
- (void)configPullToRefresh;	// IMP=0x0000000101b582e4
- (void)didRotateFromInterfaceOrientation:(long long)arg1;	// IMP=0x0000000101b58288
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x0000000101b58238
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x0000000101b581d8
- (void)viewDidLayoutSubviews;	// IMP=0x0000000101b58168
- (void)viewDidLoad;	// IMP=0x0000000101b58064
- (void)loadView;	// IMP=0x0000000101b57d60
@property(nonatomic, getter=isUseCustomPullToRefresh) _Bool useCustomPullToRefresh;
@property(nonatomic, getter=isUseInfiniteScrolling) _Bool useInfiniteScrolling;
@property(nonatomic, getter=isUsePullToRefresh) _Bool usePullToRefresh;
- (void)autoHideToolbar:(struct CGPoint)arg1;	// IMP=0x0000000101b579d8
- (void)showToolBar;	// IMP=0x0000000101b57668
- (void)hiddenToolBar;	// IMP=0x0000000101b572f4
- (void)goFirstClicked;	// IMP=0x0000000101b572a4
- (void)updateToolbarItemStatus;	// IMP=0x0000000101b571b8
- (void)setToolbarRefreshButtonEnabled:(_Bool)arg1;	// IMP=0x0000000101b57124
- (void)setToolbarStopButtonEnabled:(_Bool)arg1;	// IMP=0x0000000101b57090
- (void)setToolbarForwardButtonEnabled:(_Bool)arg1;	// IMP=0x0000000101b56ffc
- (void)setToolbarBackButtonEnabled:(_Bool)arg1;	// IMP=0x0000000101b56f68
- (void)autoFitToolbar;	// IMP=0x0000000101b56e6c
@property(readonly, nonatomic) WVWebViewToolbar *toolbar;
- (void)updateStatusBarView;	// IMP=0x0000000101b569c4
- (void)supportiOS7WithoutStatusBar;	// IMP=0x0000000101b56954
- (void)autoFitWebView;	// IMP=0x0000000101b567c0
- (void)webViewRefresh;	// IMP=0x0000000101b566e8
- (void)webViewStopLoading;	// IMP=0x0000000101b56694
- (void)webViewGoForward;	// IMP=0x0000000101b56494
- (void)webViewGoBack;	// IMP=0x0000000101b56280
@property(readonly, nonatomic) __weak UIScrollView *webViewScrollView;
- (id)webView;	// IMP=0x0000000101b5612c
- (_Bool)decideIsUseWKWebView;	// IMP=0x0000000101b56088
@property(retain, nonatomic) NSString *loadUrl;
- (void)dealloc;	// IMP=0x0000000101b55ea4
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x0000000101b55d74

@end

