//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableArray, VSImageFramebuffer;

@interface VSImageOutput : NSObject
{
    VSImageFramebuffer *outputFramebuffer;	// 8 = 0x8
    NSMutableArray *targetTextureIndices;	// 16 = 0x10
    struct CGSize inputTextureSize;	// 24 = 0x18
    struct CGSize cachedMaximumOutputSize;	// 40 = 0x28
    struct CGSize forcedMaximumSize;	// 56 = 0x38
    _Bool overrideInputSize;	// 72 = 0x48
    _Bool allTargetsWantMonochromeData;	// 73 = 0x49
    _Bool usingNextFrameForImageCapture;	// 74 = 0x4a
    _Bool _shouldIgnoreUpdatesToThisTarget;	// 75 = 0x4b
    _Bool _enabled;	// 76 = 0x4c
    _Bool _shouldSmoothlyScaleOutput;	// 77 = 0x4d
    id <VSImageInput> _targetToIgnoreForUpdates;	// 80 = 0x50
    CDUnknownBlockType _frameProcessingCompletionBlock;	// 88 = 0x58
    NSMutableArray *_targetArray;	// 96 = 0x60
    struct VSTextureOptions _outputTextureOptions;	// 104 = 0x68
}

@property(retain, nonatomic) NSMutableArray *targetArray; // @synthesize targetArray=_targetArray;
@property(nonatomic) _Bool shouldSmoothlyScaleOutput; // @synthesize shouldSmoothlyScaleOutput=_shouldSmoothlyScaleOutput;
@property(nonatomic) struct VSTextureOptions outputTextureOptions; // @synthesize outputTextureOptions=_outputTextureOptions;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(copy, nonatomic) CDUnknownBlockType frameProcessingCompletionBlock; // @synthesize frameProcessingCompletionBlock=_frameProcessingCompletionBlock;
@property(nonatomic) id <VSImageInput> targetToIgnoreForUpdates; // @synthesize targetToIgnoreForUpdates=_targetToIgnoreForUpdates;
@property(nonatomic) _Bool shouldIgnoreUpdatesToThisTarget; // @synthesize shouldIgnoreUpdatesToThisTarget=_shouldIgnoreUpdatesToThisTarget;
- (void).cxx_destruct;	// IMP=0x0000000101acfacc
- (struct CGImage *)newCGImageByFilteringImage:(id)arg1;	// IMP=0x0000000101acf8a4
- (id)imageByFilteringImage:(id)arg1;	// IMP=0x0000000101acf7cc
- (id)imageFromCurrentFramebufferWithOrientation:(long long)arg1;	// IMP=0x0000000101acf768
- (id)imageFromCurrentFramebuffer;	// IMP=0x0000000101acf6f4
- (_Bool)providesMonochromeOutput;	// IMP=0x0000000101acf6ec
- (struct CGImage *)newCGImageByFilteringCGImage:(struct CGImage *)arg1;	// IMP=0x0000000101acf52c
- (struct CGImage *)newCGImageFromCurrentlyProcessedOutput;	// IMP=0x0000000101acf524
- (void)useNextFrameForImageCapture;	// IMP=0x0000000101acf520
- (void)forceProcessingAtSizeRespectingAspectRatio:(struct CGSize)arg1;	// IMP=0x0000000101acf51c
- (void)forceProcessingAtSize:(struct CGSize)arg1;	// IMP=0x0000000101acf518
- (id)terminalTarget;	// IMP=0x0000000101acf414
- (void)removeAllTargets;	// IMP=0x0000000101acf120
- (void)removeTarget:(id)arg1;	// IMP=0x0000000101acee8c
- (void)addTarget:(id)arg1 atTextureLocation:(long long)arg2;	// IMP=0x0000000101acec2c
- (void)addTarget:(id)arg1;	// IMP=0x0000000101aceba8
- (id)targets;	// IMP=0x0000000101aceb44
- (void)removeOutputFramebuffer;	// IMP=0x0000000101aceb2c
- (id)framebufferForOutput;	// IMP=0x0000000101aceb1c
- (void)dealloc;	// IMP=0x0000000101aceacc
- (id)init;	// IMP=0x0000000101ace98c

@end

