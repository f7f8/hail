//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "AEUIViewController.h"

#import "PreferenceSettingServiceDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"
#import "UICollectionViewDelegateFlowLayout.h"

@class AEPreferenceHeaderNavView, AEPreferenceProfileViewController, AEPreferenceSettingService, NSArray, NSMutableSet, NSSet, NSString, UIButton, UICollectionView, UIView;

@interface AEPreferenceTagViewController : AEUIViewController <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, PreferenceSettingServiceDelegate>
{
    NSSet *_preSelectedTags;	// 8 = 0x8
    NSMutableSet *_selectedTags;	// 16 = 0x10
    NSArray *_allTags;	// 24 = 0x18
    AEPreferenceSettingService *_service;	// 32 = 0x20
    _Bool _prefersStatusBarHidden;	// 40 = 0x28
    _Bool _needShowPreference;	// 41 = 0x29
    CDUnknownBlockType _skipAction;	// 48 = 0x30
    NSArray *_tags;	// 56 = 0x38
    AEPreferenceHeaderNavView *_navView;	// 64 = 0x40
    UICollectionView *_tagView;	// 72 = 0x48
    UIView *_buttonBar;	// 80 = 0x50
    UIButton *_nextButton;	// 88 = 0x58
    AEPreferenceProfileViewController *_profileController;	// 96 = 0x60
}

@property(retain, nonatomic) AEPreferenceProfileViewController *profileController; // @synthesize profileController=_profileController;
@property(retain, nonatomic) UIButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) UIView *buttonBar; // @synthesize buttonBar=_buttonBar;
@property(retain, nonatomic) UICollectionView *tagView; // @synthesize tagView=_tagView;
@property(retain, nonatomic) AEPreferenceHeaderNavView *navView; // @synthesize navView=_navView;
@property(nonatomic) _Bool needShowPreference; // @synthesize needShowPreference=_needShowPreference;
@property(copy, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(copy, nonatomic) CDUnknownBlockType skipAction; // @synthesize skipAction=_skipAction;
- (void).cxx_destruct;	// IMP=0x000000010022eb1c
- (_Bool)shouldKeepFullScreenInIPad;	// IMP=0x000000010022e964
- (long long)preferredStatusBarUpdateAnimation;	// IMP=0x000000010022e95c
- (_Bool)prefersStatusBarHidden;	// IMP=0x000000010022e94c
- (id)getTagNameByTagId:(id)arg1;	// IMP=0x000000010022e684
- (void)didReceiveMemoryWarning;	// IMP=0x000000010022e650
- (id)pageTrackParams;	// IMP=0x000000010022e484
- (id)pageTrackName;	// IMP=0x000000010022e458
- (void)trackEventWithEvent:(id)arg1 andParams:(id)arg2;	// IMP=0x000000010022e180
- (void)aeService:(id)arg1 didGetTags:(id)arg2 withStatus:(_Bool)arg3;	// IMP=0x000000010022ddc4
- (void)aeService:(id)arg1 didFindPreference:(id)arg2 withStatus:(_Bool)arg3;	// IMP=0x000000010022dbf0
- (void)aeService:(id)arg1 didSetPreference:(id)arg2 withStatus:(_Bool)arg3;	// IMP=0x000000010022d9e0
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;	// IMP=0x000000010022d94c
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;	// IMP=0x000000010022d748
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;	// IMP=0x000000010022d57c
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;	// IMP=0x000000010022d510
- (long long)numberOfSectionsInCollectionView:(id)arg1;	// IMP=0x000000010022d508
- (id)convertToTrackTagstr:(id)arg1;	// IMP=0x000000010022d3e0
- (id)convertToTagstr:(id)arg1;	// IMP=0x000000010022d2b8
- (void)bindTags:(id)arg1;	// IMP=0x000000010022d260
- (void)applyAction:(id)arg1;	// IMP=0x000000010022d024
- (void)nextAction:(id)arg1;	// IMP=0x000000010022cdb0
- (void)configButtonBar;	// IMP=0x000000010022c4f0
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x000000010022c48c
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x000000010022c220
- (void)viewDidLoad;	// IMP=0x000000010022b62c
- (void)dealloc;	// IMP=0x000000010022b5b8
- (id)initWithParam:(id)arg1;	// IMP=0x000000010022b4cc
- (id)init;	// IMP=0x000000010022b438

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

