//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "VSImageOutput.h"

#import "AVCaptureAudioDataOutputSampleBufferDelegate.h"
#import "AVCaptureFileOutputRecordingDelegate.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"

@class AVCaptureAudioDataOutput, AVCaptureMovieFileOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, CIContext, NSError, NSMutableArray, NSObject<OS_dispatch_queue>, NSString, NSTimer, UIView, VSAudioConfiguration, VSImageYuvToRgbFilter, VSPhotoConfiguration, VSRecordSession, VSSampleBufferHolder, VSVideoConfiguration;

@interface VSRecorder : VSImageOutput <AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureFileOutputRecordingDelegate>
{
    AVCaptureVideoPreviewLayer *_previewLayer;	// 80 = 0x50
    AVCaptureSession *_captureSession;	// 88 = 0x58
    UIView *_previewView;	// 96 = 0x60
    AVCaptureVideoDataOutput *_videoOutput;	// 104 = 0x68
    AVCaptureMovieFileOutput *_movieOutput;	// 112 = 0x70
    AVCaptureAudioDataOutput *_audioOutput;	// 120 = 0x78
    AVCaptureStillImageOutput *_photoOutput;	// 128 = 0x80
    VSSampleBufferHolder *_lastAudioBuffer;	// 136 = 0x88
    CIContext *_context;	// 144 = 0x90
    _Bool _audioInputAdded;	// 152 = 0x98
    _Bool _audioOutputAdded;	// 153 = 0x99
    _Bool _videoInputAdded;	// 154 = 0x9a
    _Bool _videoOutputAdded;	// 155 = 0x9b
    _Bool _shouldAutoresumeRecording;	// 156 = 0x9c
    _Bool _needsSwitchBackToContinuousFocus;	// 157 = 0x9d
    _Bool _adjustingFocus;	// 158 = 0x9e
    int _beginSessionConfigurationCount;	// 160 = 0xa0
    double _lastAppendedVideoTime;	// 168 = 0xa8
    NSTimer *_movieOutputProgressTimer;	// 176 = 0xb0
    CDStruct_1b6d18a9 _lastMovieFileOutputTime;	// 184 = 0xb8
    CDUnknownBlockType _pauseCompletionHandler;	// 208 = 0xd0
    _Bool _isRecording;	// 216 = 0xd8
    _Bool _resetZoomOnChangeDevice;	// 217 = 0xd9
    _Bool _isAdjustingExposure;	// 218 = 0xda
    _Bool _autoSetVideoOrientation;	// 219 = 0xdb
    _Bool _fastRecordMethodEnabled;	// 220 = 0xdc
    _Bool _initializeSessionLazily;	// 221 = 0xdd
    _Bool _mirrorOnFrontCamera;	// 222 = 0xde
    _Bool _subjectAreaChanged;	// 223 = 0xdf
    VSVideoConfiguration *_videoConfiguration;	// 224 = 0xe0
    VSAudioConfiguration *_audioConfiguration;	// 232 = 0xe8
    VSPhotoConfiguration *_photoConfiguration;	// 240 = 0xf0
    long long _flashMode;	// 248 = 0xf8
    long long _device;	// 256 = 0x100
    double _maxVideoZoomFactor;	// 264 = 0x108
    NSString *_captureSessionPreset;	// 272 = 0x110
    id <VSRecorderDelegate> _delegate;	// 280 = 0x118
    VSRecordSession *_session;	// 288 = 0x120
    long long _videoOrientation;	// 296 = 0x128
    long long _videoStabilizationMode;	// 304 = 0x130
    NSError *_error;	// 312 = 0x138
    NSObject<OS_dispatch_queue> *_sessionQueue;	// 320 = 0x140
    NSMutableArray *_finishWriteBlocks;	// 328 = 0x148
    id _observerFinishWrite;	// 336 = 0x150
    VSImageYuvToRgbFilter *_yuvToRgbFilter;	// 344 = 0x158
    CDStruct_1b6d18a9 _maxRecordDuration;	// 352 = 0x160
}

+ (_Bool)isSessionQueue;	// IMP=0x0000000101aca658
+ (id)createError:(id)arg1;	// IMP=0x0000000101ac57ac
@property(retain, nonatomic) VSImageYuvToRgbFilter *yuvToRgbFilter; // @synthesize yuvToRgbFilter=_yuvToRgbFilter;
@property(nonatomic) __weak id observerFinishWrite; // @synthesize observerFinishWrite=_observerFinishWrite;
@property(retain, nonatomic) NSMutableArray *finishWriteBlocks; // @synthesize finishWriteBlocks=_finishWriteBlocks;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) _Bool subjectAreaChanged; // @synthesize subjectAreaChanged=_subjectAreaChanged;
@property(nonatomic) _Bool mirrorOnFrontCamera; // @synthesize mirrorOnFrontCamera=_mirrorOnFrontCamera;
@property(nonatomic) _Bool initializeSessionLazily; // @synthesize initializeSessionLazily=_initializeSessionLazily;
@property(nonatomic) _Bool fastRecordMethodEnabled; // @synthesize fastRecordMethodEnabled=_fastRecordMethodEnabled;
@property(nonatomic) CDStruct_1b6d18a9 maxRecordDuration; // @synthesize maxRecordDuration=_maxRecordDuration;
@property(nonatomic) _Bool autoSetVideoOrientation; // @synthesize autoSetVideoOrientation=_autoSetVideoOrientation;
@property(nonatomic) long long videoStabilizationMode; // @synthesize videoStabilizationMode=_videoStabilizationMode;
@property(nonatomic) long long videoOrientation; // @synthesize videoOrientation=_videoOrientation;
@property(readonly, nonatomic) VSRecordSession *session; // @synthesize session=_session;
@property(nonatomic) __weak id <VSRecorderDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *captureSessionPreset; // @synthesize captureSessionPreset=_captureSessionPreset;
@property(readonly, nonatomic) _Bool isAdjustingExposure; // @synthesize isAdjustingExposure=_isAdjustingExposure;
@property(nonatomic) _Bool resetZoomOnChangeDevice; // @synthesize resetZoomOnChangeDevice=_resetZoomOnChangeDevice;
@property(nonatomic) double maxVideoZoomFactor; // @synthesize maxVideoZoomFactor=_maxVideoZoomFactor;
@property(nonatomic) long long device; // @synthesize device=_device;
@property(nonatomic) long long flashMode; // @synthesize flashMode=_flashMode;
@property(readonly, nonatomic) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(readonly, nonatomic) VSPhotoConfiguration *photoConfiguration; // @synthesize photoConfiguration=_photoConfiguration;
@property(readonly, nonatomic) VSAudioConfiguration *audioConfiguration; // @synthesize audioConfiguration=_audioConfiguration;
@property(readonly, nonatomic) VSVideoConfiguration *videoConfiguration; // @synthesize videoConfiguration=_videoConfiguration;
- (void).cxx_destruct;	// IMP=0x0000000101aca9f8
- (void)removeAllTargets;	// IMP=0x0000000101aca700
- (void)addTarget:(id)arg1;	// IMP=0x0000000101aca67c
@property(nonatomic) double videoZoomFactor;
- (double)maxVideoZoomFactorForDevice:(long long)arg1;	// IMP=0x0000000101aca3dc
@property(readonly, nonatomic) _Bool videoEnabledAndReady;
@property(readonly, nonatomic) _Bool audioEnabledAndReady;
@property(readonly, nonatomic) AVCaptureStillImageOutput *photoOutput;
@property(readonly, nonatomic) AVCaptureAudioDataOutput *audioOutput;
@property(readonly, nonatomic) AVCaptureVideoDataOutput *videoOutput;
@property(readonly, nonatomic) double ratioRecorded;
- (_Bool)setActiveFormatWithFrameRate:(int)arg1 width:(int)arg2 andHeight:(int)arg3 error:(id *)arg4;	// IMP=0x0000000101ac9df0
- (_Bool)setActiveFormatWithFrameRate:(int)arg1 error:(id *)arg2;	// IMP=0x0000000101ac9d2c
@property(nonatomic) int frameRate;
- (id)videoConnection;	// IMP=0x0000000101ac9714
- (void)setAdjustingFocus:(_Bool)arg1;	// IMP=0x0000000101ac9698
- (void)setAdjustingExposure:(_Bool)arg1;	// IMP=0x0000000101ac961c
@property(readonly, nonatomic) _Bool isAdjustingFocus;
@property(readonly, nonatomic) long long focusMode;
- (void)setSession:(id)arg1;	// IMP=0x0000000101ac942c
@property(readonly, nonatomic) _Bool isPrepared;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *previewLayer;
- (void)setPhotoOutputSettings:(id)arg1;	// IMP=0x0000000101ac9070
- (id)photoOutputSettings;	// IMP=0x0000000101ac9058
@property(retain, nonatomic) UIView *previewView;
@property(readonly, nonatomic) AVCaptureSession *captureSession;
- (long long)actualVideoOrientation;	// IMP=0x0000000101ac8e8c
- (id)videoDevice;	// IMP=0x0000000101ac8e04
- (id)audioDevice;	// IMP=0x0000000101ac8d88
- (id)currentDeviceInputForMediaType:(id)arg1;	// IMP=0x0000000101ac8bec
- (id)currentVideoDeviceInput;	// IMP=0x0000000101ac8bd4
- (id)currentAudioDeviceInput;	// IMP=0x0000000101ac8bbc
@property(readonly, nonatomic) _Bool focusSupported;
@property(readonly, nonatomic) struct CGPoint focusPointOfInterest;
@property(readonly, nonatomic) _Bool exposureSupported;
@property(readonly, nonatomic) struct CGPoint exposurePointOfInterest;
- (void)refocus;	// IMP=0x0000000101ac8998
- (void)focusCenter;	// IMP=0x0000000101ac8974
- (void)continuousFocusAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000101ac8964
- (void)autoFocusAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000101ac8954
- (void)_applyPointOfInterest:(struct CGPoint)arg1 continuousMode:(_Bool)arg2;	// IMP=0x0000000101ac86c4
- (void)lockFocus;	// IMP=0x0000000101ac85ec
- (void)sessionInterrupted:(id)arg1;	// IMP=0x0000000101ac8518
- (void)mediaServicesWereLost:(id)arg1;	// IMP=0x0000000101ac84fc
- (void)mediaServicesWereReset:(id)arg1;	// IMP=0x0000000101ac84e0
- (struct CGPoint)convertPointOfInterestToViewCoordinates:(struct CGPoint)arg1;	// IMP=0x0000000101ac8474
- (struct CGPoint)convertToPointOfInterestFromViewCoordinates:(struct CGPoint)arg1;	// IMP=0x0000000101ac8408
- (void)switchFlashMode;	// IMP=0x0000000101ac8310
- (void)switchCaptureDevices;	// IMP=0x0000000101ac82c8
- (void)reconfigureVideoInput:(_Bool)arg1 audioInput:(_Bool)arg2;	// IMP=0x0000000101ac8078
- (void)configureDevice:(id)arg1 mediaType:(id)arg2 error:(id *)arg3;	// IMP=0x0000000101ac7c6c
- (void)_configureFrontCameraMirroring:(_Bool)arg1;	// IMP=0x0000000101ac7bec
- (void)_configureVideoStabilization;	// IMP=0x0000000101ac7b64
- (void)removeVideoObservers:(id)arg1;	// IMP=0x0000000101ac7af4
- (void)addVideoObservers:(id)arg1;	// IMP=0x0000000101ac7a6c
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0000000101ac76fc
- (void)_focusDidComplete;	// IMP=0x0000000101ac7644
- (id)_createSegmentInfo;	// IMP=0x0000000101ac75bc
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;	// IMP=0x0000000101ac7368
- (void)_handleAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 withSession:(id)arg2;	// IMP=0x0000000101ac6d28
- (void)_handleVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 withSession:(id)arg2 connection:(id)arg3;	// IMP=0x0000000101ac657c
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;	// IMP=0x0000000101ac611c
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;	// IMP=0x0000000101ac602c
- (void)appendVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 toRecordSession:(id)arg2 duration:(CDStruct_1b6d18a9)arg3 connection:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000101ac5f6c
- (CDStruct_1b6d18a9)frameDurationFromConnection:(id)arg1;	// IMP=0x0000000101ac5e90
- (void)checkRecordSessionDuration:(id)arg1;	// IMP=0x0000000101ac5afc
- (void)beginRecordSegmentIfNeeded:(id)arg1;	// IMP=0x0000000101ac5898
- (void)pause:(CDUnknownBlockType)arg1;	// IMP=0x0000000101ac50c8
- (void)pause;	// IMP=0x0000000101ac50b8
- (void)record;	// IMP=0x0000000101ac4ee0
- (void)_progressTimerFired:(id)arg1;	// IMP=0x0000000101ac4be4
- (void)resetSession;	// IMP=0x0000000101ac4b50
- (void)unprepare;	// IMP=0x0000000101ac4870
- (void)capturePhoto:(CDUnknownBlockType)arg1;	// IMP=0x0000000101ac4624
- (void)_subjectAreaDidChange;	// IMP=0x0000000101ac45a4
- (void)stopRunning;	// IMP=0x0000000101ac458c
- (_Bool)startRunning;	// IMP=0x0000000101ac44f8
- (_Bool)prepare:(id *)arg1;	// IMP=0x0000000101ac43d4
- (_Bool)_reconfigureSession;	// IMP=0x0000000101ac3c68
- (void)commitConfiguration;	// IMP=0x0000000101ac3c2c
- (void)beginConfiguration;	// IMP=0x0000000101ac3bf0
- (void)updateVideoOrientation;	// IMP=0x0000000101ac39f4
- (void)sessionRuntimeError:(id)arg1;	// IMP=0x0000000101ac39e8
- (void)deviceOrientationChanged:(id)arg1;	// IMP=0x0000000101ac3944
- (void)applicationDidBecomeActive:(id)arg1;	// IMP=0x0000000101ac386c
- (void)applicationDidEnterBackground:(id)arg1;	// IMP=0x0000000101ac3848
- (void)dealloc;	// IMP=0x0000000101ac36b4
- (id)init;	// IMP=0x0000000101ac30f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

