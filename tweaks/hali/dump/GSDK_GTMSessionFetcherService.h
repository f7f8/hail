//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GTMSessionFetcherServiceProtocol.h"

@class GSDK_GTMSessionFetcherSessionDelegateDispatcher, NSArray, NSDate, NSDictionary, NSHTTPCookieStorage, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSOperationQueue, NSString, NSURLCredential, NSURLSessionConfiguration;

@interface GSDK_GTMSessionFetcherService : NSObject <GTMSessionFetcherServiceProtocol>
{
    NSMutableDictionary *_delayedFetchersByHost;	// 8 = 0x8
    NSMutableDictionary *_runningFetchersByHost;	// 16 = 0x10
    unsigned long long _maxRunningFetchersPerHost;	// 24 = 0x18
    GSDK_GTMSessionFetcherSessionDelegateDispatcher *_delegateDispatcher;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 40 = 0x28
    NSOperationQueue *_delegateQueue;	// 48 = 0x30
    NSHTTPCookieStorage *_cookieStorage;	// 56 = 0x38
    NSString *_userAgent;	// 64 = 0x40
    double _timeout;	// 72 = 0x48
    NSURLCredential *_credential;	// 80 = 0x50
    NSURLCredential *_proxyCredential;	// 88 = 0x58
    long long _cookieStorageMethod;	// 96 = 0x60
    id <GTMFetcherAuthorizationProtocol> _authorizer;	// 104 = 0x68
    NSMutableArray *_stoppedFetchersToWaitFor;	// 112 = 0x70
    NSDate *_stoppedAllFetchersDate;	// 120 = 0x78
    _Bool _allowLocalhostRequest;	// 128 = 0x80
    _Bool _allowInvalidServerCertificates;	// 129 = 0x81
    _Bool _retryEnabled;	// 130 = 0x82
    NSURLSessionConfiguration *_configuration;	// 136 = 0x88
    CDUnknownBlockType _configurationBlock;	// 144 = 0x90
    NSArray *_allowedInsecureSchemes;	// 152 = 0x98
    CDUnknownBlockType _retryBlock;	// 160 = 0xa0
    double _maxRetryInterval;	// 168 = 0xa8
    double _minRetryInterval;	// 176 = 0xb0
    NSDictionary *_properties;	// 184 = 0xb8
    double _unusedSessionTimeout;	// 192 = 0xc0
    CDUnknownBlockType _testBlock;	// 200 = 0xc8
}

+ (unsigned long long)numberOfNonBackgroundSessionFetchers:(id)arg1;	// IMP=0x00000001012ffaa8
+ (id)mockFetcherServiceWithFakedData:(id)arg1 fakedError:(id)arg2;	// IMP=0x00000001012fff78
@property(copy) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(copy) NSDictionary *properties; // @synthesize properties=_properties;
@property double minRetryInterval; // @synthesize minRetryInterval=_minRetryInterval;
@property double maxRetryInterval; // @synthesize maxRetryInterval=_maxRetryInterval;
@property(copy) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(getter=isRetryEnabled) _Bool retryEnabled; // @synthesize retryEnabled=_retryEnabled;
@property _Bool allowInvalidServerCertificates; // @synthesize allowInvalidServerCertificates=_allowInvalidServerCertificates;
@property _Bool allowLocalhostRequest; // @synthesize allowLocalhostRequest=_allowLocalhostRequest;
@property(copy) NSArray *allowedInsecureSchemes; // @synthesize allowedInsecureSchemes=_allowedInsecureSchemes;
@property(retain) NSURLCredential *proxyCredential; // @synthesize proxyCredential=_proxyCredential;
@property(retain) NSURLCredential *credential; // @synthesize credential=_credential;
@property(retain) NSOperationQueue *sessionDelegateQueue; // @synthesize sessionDelegateQueue=_delegateQueue;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(copy) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(retain) NSHTTPCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property(copy) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=_configurationBlock;
@property(retain) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property unsigned long long maxRunningFetchersPerHost; // @synthesize maxRunningFetchersPerHost=_maxRunningFetchersPerHost;
- (void).cxx_destruct;	// IMP=0x00000001012ffdf8
@property(readonly) NSOperationQueue *delegateQueue;
- (void)detachAuthorizer;	// IMP=0x00000001012ffa0c
@property(retain) id <GTMFetcherAuthorizationProtocol> authorizer;
@property(retain) NSDictionary *delayedFetchersByHost;
@property(retain) NSDictionary *runningFetchersByHost;
- (void)abandonDispatcher;	// IMP=0x00000001012ff6cc
@property double unusedSessionTimeout; // @synthesize unusedSessionTimeout=_unusedSessionTimeout;
- (void)resetSession;	// IMP=0x00000001012ff570
@property _Bool reuseSession;
- (id)stoppedAllFetchersDate;	// IMP=0x00000001012ff400
- (void)stopAllFetchers;	// IMP=0x00000001012ff028
- (id)issuedFetchersWithRequestURL:(id)arg1;	// IMP=0x00000001012fee00
- (id)issuedFetchers;	// IMP=0x00000001012fecb4
- (unsigned long long)numberOfDelayedFetchers;	// IMP=0x00000001012feb1c
- (unsigned long long)numberOfRunningFetchers;	// IMP=0x00000001012fe984
- (unsigned long long)numberOfFetchers;	// IMP=0x00000001012fe944
- (void)fetcherDidStop:(id)arg1;	// IMP=0x00000001012fe420
- (void)stopFetcher:(id)arg1;	// IMP=0x00000001012fe410
- (void)fetcherDidBeginFetching:(id)arg1;	// IMP=0x00000001012fe314
- (void)fetcherDidCreateSession:(id)arg1;	// IMP=0x00000001012fe244
- (id)delegateDispatcherForFetcher:(id)arg1;	// IMP=0x00000001012fe1b4
- (void)startFetcher:(id)arg1;	// IMP=0x00000001012fe19c
- (_Bool)fetcherShouldBeginFetching:(id)arg1;	// IMP=0x00000001012fdf70
- (_Bool)isDelayingFetcher:(id)arg1;	// IMP=0x00000001012fde30
- (void)addDelayedFetcher:(id)arg1 forHost:(id)arg2;	// IMP=0x00000001012fdd44
- (void)addRunningFetcher:(id)arg1 forHost:(id)arg2;	// IMP=0x00000001012fdc58
- (id)sessionDelegate;	// IMP=0x00000001012fdbf8
- (id)sessionForFetcherCreation;	// IMP=0x00000001012fdaec
- (id)session;	// IMP=0x00000001012fda7c
- (id)fetcherWithURLString:(id)arg1;	// IMP=0x00000001012fda14
- (id)fetcherWithURL:(id)arg1;	// IMP=0x00000001012fd9ac
- (id)fetcherWithRequest:(id)arg1;	// IMP=0x00000001012fd934
- (id)fetcherWithRequest:(id)arg1 fetcherClass:(Class)arg2;	// IMP=0x00000001012fd48c
- (void)dealloc;	// IMP=0x00000001012fd424
- (id)init;	// IMP=0x00000001012fd2d4
- (_Bool)waitForCompletionOfAllFetchersWithTimeout:(double)arg1;	// IMP=0x00000001013001dc
@property long long cookieStorageMethod;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

