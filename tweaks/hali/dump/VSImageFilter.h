//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "VSImageOutput.h"

#import "VSImageInput.h"

@class NSMutableDictionary, NSObject<OS_dispatch_semaphore>, NSString, VSImageFramebuffer, VSImageGLProgram;

@interface VSImageFilter : VSImageOutput <VSImageInput>
{
    VSImageFramebuffer *firstInputFramebuffer;	// 80 = 0x50
    VSImageGLProgram *filterProgram;	// 88 = 0x58
    int filterPositionAttribute;	// 96 = 0x60
    int filterTextureCoordinateAttribute;	// 100 = 0x64
    int filterInputTextureUniform;	// 104 = 0x68
    float backgroundColorRed;	// 108 = 0x6c
    float backgroundColorGreen;	// 112 = 0x70
    float backgroundColorBlue;	// 116 = 0x74
    float backgroundColorAlpha;	// 120 = 0x78
    _Bool isEndProcessing;	// 124 = 0x7c
    struct CGSize currentFilterSize;	// 128 = 0x80
    unsigned long long inputRotation;	// 144 = 0x90
    _Bool currentlyReceivingMonochromeInput;	// 152 = 0x98
    NSMutableDictionary *uniformStateRestorationBlocks;	// 160 = 0xa0
    NSObject<OS_dispatch_semaphore> *imageCaptureSemaphore;	// 168 = 0xa8
    _Bool _preventRendering;	// 176 = 0xb0
    struct __CVBuffer *_renderTarget;	// 184 = 0xb8
}

+ (const float *)textureCoordinatesForRotation:(unsigned long long)arg1;	// IMP=0x0000000101af7db8
@property(readonly) struct __CVBuffer *renderTarget; // @synthesize renderTarget=_renderTarget;
@property(nonatomic) _Bool currentlyReceivingMonochromeInput; // @synthesize currentlyReceivingMonochromeInput;
@property(nonatomic) _Bool preventRendering; // @synthesize preventRendering=_preventRendering;
- (void).cxx_destruct;	// IMP=0x0000000101af9fc4
- (void)resetWithParamConfig:(id)arg1;	// IMP=0x0000000101af9f70
- (id)getParamConfig;	// IMP=0x0000000101af9f38
- (_Bool)wantsMonochromeInput;	// IMP=0x0000000101af9f30
- (void)endProcessing;	// IMP=0x0000000101af9e04
- (struct CGSize)maximumOutputSize;	// IMP=0x0000000101af9df4
- (void)forceProcessingAtSizeRespectingAspectRatio:(struct CGSize)arg1;	// IMP=0x0000000101af9d64
- (void)forceProcessingAtSize:(struct CGSize)arg1;	// IMP=0x0000000101af9ce8
- (void)setInputRotation:(unsigned long long)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101af9cd8
- (void)setInputSize:(struct CGSize)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101af9b78
- (struct CGPoint)rotatedPoint:(struct CGPoint)arg1 forRotation:(unsigned long long)arg2;	// IMP=0x0000000101af9ad8
- (struct CGSize)rotatedSize:(struct CGSize)arg1 forIndex:(long long)arg2;	// IMP=0x0000000101af9a94
- (void)setInputFramebuffer:(id)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101af9a34
- (long long)nextAvailableTextureIndex;	// IMP=0x0000000101af9a2c
- (void)newFrameReadyAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101af99a0
- (void)setUniformsForProgramAtIndex:(unsigned long long)arg1;	// IMP=0x0000000101af9950
- (void)setAndExecuteUniformStateCallbackAtIndex:(int)arg1 forProgram:(id)arg2 toBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000101af9894
- (void)setInteger:(int)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af9710
- (void)setFloatArray:(float *)arg1 length:(int)arg2 forUniform:(int)arg3 program:(id)arg4;	// IMP=0x0000000101af94bc
- (void)setVec4:(struct VSVector4)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af9308
- (void)setVec3:(struct VSVector3)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af9150
- (void)setSize:(struct CGSize)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af8f5c
- (void)setPoint:(struct CGPoint)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af8d68
- (void)setFloat:(float)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af8bd4
- (void)setMatrix4f:(struct VSMatrix4x4)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af8a08
- (void)setMatrix3f:(struct VSMatrix3x3)arg1 forUniform:(int)arg2 program:(id)arg3;	// IMP=0x0000000101af884c
- (void)setFloatArray:(float *)arg1 length:(int)arg2 forUniform:(id)arg3;	// IMP=0x0000000101af87e8
- (void)setFloatVec4:(struct VSVector4)arg1 forUniform:(id)arg2;	// IMP=0x0000000101af8770
- (void)setFloatVec3:(struct VSVector3)arg1 forUniformName:(id)arg2;	// IMP=0x0000000101af8700
- (void)setPoint:(struct CGPoint)arg1 forUniformName:(id)arg2;	// IMP=0x0000000101af86a0
- (void)setSize:(struct CGSize)arg1 forUniformName:(id)arg2;	// IMP=0x0000000101af8640
- (void)setFloat:(float)arg1 forUniformName:(id)arg2;	// IMP=0x0000000101af85e8
- (void)setInteger:(int)arg1 forUniformName:(id)arg2;	// IMP=0x0000000101af858c
- (void)setBackgroundColorRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;	// IMP=0x0000000101af8558
- (struct CGSize)outputFrameSize;	// IMP=0x0000000101af8540
- (void)informTargetsAboutNewFrameAtTime:(CDStruct_1b6d18a9)arg1;	// IMP=0x0000000101af8094
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;	// IMP=0x0000000101af7dd0
- (struct CGSize)sizeOfFBO;	// IMP=0x0000000101af7d40
- (struct CGImage *)newCGImageFromCurrentlyProcessedOutput;	// IMP=0x0000000101af7c98
- (void)useNextFrameForImageCapture;	// IMP=0x0000000101af7c70
- (void)dealloc;	// IMP=0x0000000101af7c3c
- (void)setupFilterForSize:(struct CGSize)arg1;	// IMP=0x0000000101af7c38
- (void)initializeAttributes;	// IMP=0x0000000101af7be0
- (id)init;	// IMP=0x0000000101af7b8c
- (id)initWithFragmentShaderFromFile:(id)arg1;	// IMP=0x0000000101af7a88
- (id)initWithFragmentShaderFromString:(id)arg1;	// IMP=0x0000000101af7a2c
- (id)initWithVertexShaderFromString:(id)arg1 fragmentShaderFromString:(id)arg2;	// IMP=0x0000000101af75a0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

