//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableDictionary, NSString, NSURL;

@interface PINDiskCache : NSObject
{
    CDUnknownBlockType _willAddObjectBlock;	// 8 = 0x8
    CDUnknownBlockType _willRemoveObjectBlock;	// 16 = 0x10
    CDUnknownBlockType _willRemoveAllObjectsBlock;	// 24 = 0x18
    CDUnknownBlockType _didAddObjectBlock;	// 32 = 0x20
    CDUnknownBlockType _didRemoveObjectBlock;	// 40 = 0x28
    CDUnknownBlockType _didRemoveAllObjectsBlock;	// 48 = 0x30
    unsigned long long _byteLimit;	// 56 = 0x38
    double _ageLimit;	// 64 = 0x40
    NSString *_name;	// 72 = 0x48
    NSURL *_cacheURL;	// 80 = 0x50
    unsigned long long _byteCount;	// 88 = 0x58
    struct dispatch_queue_s *_asyncQueue;	// 96 = 0x60
    struct dispatch_semaphore_s *_lockSemaphore;	// 104 = 0x68
    NSMutableDictionary *_dates;	// 112 = 0x70
    NSMutableDictionary *_sizes;	// 120 = 0x78
}

+ (void)emptyTrash;	// IMP=0x00000001013f0a80
+ (_Bool)moveItemAtURLToTrash:(id)arg1;	// IMP=0x00000001013f0844
+ (id)sharedTrashURL;	// IMP=0x00000001013f0600
+ (struct dispatch_queue_s *)sharedTrashQueue;	// IMP=0x00000001013f0528
+ (id)sharedCache;	// IMP=0x00000001013f0258
@property(retain, nonatomic) NSMutableDictionary *sizes; // @synthesize sizes=_sizes;
@property(retain, nonatomic) NSMutableDictionary *dates; // @synthesize dates=_dates;
@property(nonatomic) struct dispatch_semaphore_s *lockSemaphore; // @synthesize lockSemaphore=_lockSemaphore;
@property(nonatomic) struct dispatch_queue_s *asyncQueue; // @synthesize asyncQueue=_asyncQueue;
@property unsigned long long byteCount; // @synthesize byteCount=_byteCount;
@property(retain, nonatomic) NSURL *cacheURL; // @synthesize cacheURL=_cacheURL;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;	// IMP=0x00000001013f5990
- (void)unlock;	// IMP=0x00000001013f5838
- (void)lock;	// IMP=0x00000001013f5824
@property double ageLimit; // @synthesize ageLimit=_ageLimit;
@property unsigned long long byteLimit; // @synthesize byteLimit=_byteLimit;
@property(copy) CDUnknownBlockType didRemoveAllObjectsBlock; // @synthesize didRemoveAllObjectsBlock=_didRemoveAllObjectsBlock;
@property(copy) CDUnknownBlockType didRemoveObjectBlock; // @synthesize didRemoveObjectBlock=_didRemoveObjectBlock;
@property(copy) CDUnknownBlockType didAddObjectBlock; // @synthesize didAddObjectBlock=_didAddObjectBlock;
@property(copy) CDUnknownBlockType willRemoveAllObjectsBlock; // @synthesize willRemoveAllObjectsBlock=_willRemoveAllObjectsBlock;
@property(copy) CDUnknownBlockType willRemoveObjectBlock; // @synthesize willRemoveObjectBlock=_willRemoveObjectBlock;
@property(copy) CDUnknownBlockType willAddObjectBlock; // @synthesize willAddObjectBlock=_willAddObjectBlock;
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001013f4650
- (void)removeAllObjects;	// IMP=0x00000001013f4448
- (void)trimToSizeByDate:(unsigned long long)arg1;	// IMP=0x00000001013f42bc
- (void)trimToDate:(id)arg1;	// IMP=0x00000001013f40ec
- (void)trimToSize:(unsigned long long)arg1;	// IMP=0x00000001013f3f60
- (void)removeObjectForKey:(id)arg1 fileURL:(id *)arg2;	// IMP=0x00000001013f3da0
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000001013f3d90
- (void)setObject:(id)arg1 forKey:(id)arg2 fileURL:(id *)arg3;	// IMP=0x00000001013f38ac
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001013f3858
- (id)fileURLForKey:(id)arg1;	// IMP=0x00000001013f3704
- (id)objectForKey:(id)arg1 fileURL:(id *)arg2;	// IMP=0x00000001013f33f0
- (id)objectForKey:(id)arg1;	// IMP=0x00000001013f33e0
- (void)synchronouslyLockFileAccessWhileExecutingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001013f3360
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f314c
- (void)removeAllObjects:(CDUnknownBlockType)arg1;	// IMP=0x00000001013f2fb0
- (void)trimToSizeByDate:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f2e08
- (void)trimToDate:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f2c28
- (void)trimToSize:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f2a80
- (void)removeObjectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f2858
- (void)setObject:(id)arg1 forKey:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000001013f25e8
- (void)fileURLForKey:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f23e4
- (void)objectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000001013f21a8
- (void)lockFileAccessWhileExecutingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001013f2018
- (void)trimToAgeLimitRecursively;	// IMP=0x00000001013f1e70
- (void)trimDiskToDate:(id)arg1;	// IMP=0x00000001013f1ca0
- (void)trimDiskToSizeByDate:(unsigned long long)arg1;	// IMP=0x00000001013f1b38
- (void)trimDiskToSize:(unsigned long long)arg1;	// IMP=0x00000001013f19b8
- (_Bool)removeFileAndExecuteBlocksForKey:(id)arg1;	// IMP=0x00000001013f17c4
- (_Bool)setFileModificationDate:(id)arg1 forURL:(id)arg2;	// IMP=0x00000001013f157c
- (void)initializeDiskProperties;	// IMP=0x00000001013f10dc
- (_Bool)createCacheDirectory;	// IMP=0x00000001013f0f38
- (id)decodedString:(id)arg1;	// IMP=0x00000001013f04ac
- (id)encodedString:(id)arg1;	// IMP=0x00000001013f042c
- (id)keyForEncodedFileURL:(id)arg1;	// IMP=0x00000001013f03bc
- (id)encodedFileURLForKey:(id)arg1;	// IMP=0x00000001013f0314
- (id)description;	// IMP=0x00000001013f01f0
- (id)initWithName:(id)arg1 rootPath:(id)arg2;	// IMP=0x00000001013efdd8
- (id)initWithName:(id)arg1;	// IMP=0x00000001013efd38
- (void)dealloc;	// IMP=0x00000001013efcd0

@end

