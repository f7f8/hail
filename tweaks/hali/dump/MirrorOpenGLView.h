//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GLKView.h"

#import "MirrorOpenGLProtocol.h"

@class MirrorGLKProgram, MirrorOpenGLFrameBuffer, NSString;

@interface MirrorOpenGLView : GLKView <MirrorOpenGLProtocol>
{
    int _inputRotation;	// 8 = 0x8
    float _imageVertices[8];	// 12 = 0xc
    _Bool _enabled;	// 44 = 0x2c
    _Bool _isEnterBackground;	// 45 = 0x2d
    int _fillMode;	// 48 = 0x30
    unsigned int _framebuffer;	// 52 = 0x34
    unsigned int _colorRenderbuffer;	// 56 = 0x38
    MirrorGLKProgram *_displayProgram;	// 64 = 0x40
    MirrorOpenGLFrameBuffer *_inputFrameBuffer;	// 72 = 0x48
    CDUnknownBlockType _takeAPhotoCompletion;	// 80 = 0x50
    struct CGSize _sizeInPixels;	// 88 = 0x58
    struct CGSize _boundsSizeAtFrameBuffer;	// 104 = 0x68
    struct CGSize _inputSize;	// 120 = 0x78
}

+ (const float *)textureCoordinatesForRotation:(int)arg1;	// IMP=0x00000001013643c4
+ (Class)layerClass;	// IMP=0x0000000101363538
@property(nonatomic) _Bool isEnterBackground; // @synthesize isEnterBackground=_isEnterBackground;
@property(copy) CDUnknownBlockType takeAPhotoCompletion; // @synthesize takeAPhotoCompletion=_takeAPhotoCompletion;
@property(retain, nonatomic) MirrorOpenGLFrameBuffer *inputFrameBuffer; // @synthesize inputFrameBuffer=_inputFrameBuffer;
@property(nonatomic) struct CGSize inputSize; // @synthesize inputSize=_inputSize;
@property(nonatomic) struct CGSize boundsSizeAtFrameBuffer; // @synthesize boundsSizeAtFrameBuffer=_boundsSizeAtFrameBuffer;
@property(nonatomic) unsigned int colorRenderbuffer; // @synthesize colorRenderbuffer=_colorRenderbuffer;
@property(nonatomic) unsigned int framebuffer; // @synthesize framebuffer=_framebuffer;
@property(retain, nonatomic) MirrorGLKProgram *displayProgram; // @synthesize displayProgram=_displayProgram;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) int fillMode; // @synthesize fillMode=_fillMode;
- (void).cxx_destruct;	// IMP=0x0000000101364f60
- (void)setCurrentlyReceivingMonochromeInput:(_Bool)arg1;	// IMP=0x0000000101364dc0
- (void)didEndProcessing;	// IMP=0x0000000101364dbc
- (_Bool)shouldUpdatesSimpleBufferToThisTarget;	// IMP=0x0000000101364db4
- (_Bool)shouldIgnoreUpdatesToThisTarget;	// IMP=0x0000000101364dac
- (long long)nextAvailableTextureIndex;	// IMP=0x0000000101364da4
- (void)inputFramebufferAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(long long)arg2;	// IMP=0x00000001013648c4
- (void)setCurrentMonochromeInput:(_Bool)arg1;	// IMP=0x00000001013648c0
- (_Bool)wantsMonochromeInput;	// IMP=0x00000001013648b8
- (void)setInputSize:(struct CGSize)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101364788
- (void)setInputRotation:(int)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101364778
- (void)setInputFramebuffer:(id)arg1 atIndex:(long long)arg2;	// IMP=0x0000000101364714
- (void)inputSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;	// IMP=0x0000000101364710
- (void)applicationDidBecomeActiveNotification:(id)arg1;	// IMP=0x00000001013646f0
- (void)applicationDidEnterBackgroundNotification:(id)arg1;	// IMP=0x00000001013646c0
- (void)takeAPhotoWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001013646a4
@property(readonly, nonatomic) struct CGSize sizeInPixels; // @synthesize sizeInPixels=_sizeInPixels;
- (struct CGSize)maximumOutputSize;	// IMP=0x00000001013645bc
- (id)snapshot;	// IMP=0x00000001013643dc
- (void)presentFramebuffer;	// IMP=0x00000001013642e4
- (void)activeFramebuffer;	// IMP=0x000000010136426c
- (void)dealloc;	// IMP=0x0000000101364134
- (void)layoutSubviews;	// IMP=0x0000000101363fd0
- (void)recalculateViewGeometry;	// IMP=0x0000000101363e00
- (void)createDisplayFramebuffer;	// IMP=0x0000000101363bbc
- (void)destroyDisplayFramebuffer;	// IMP=0x0000000101363b0c
- (void)initializer;	// IMP=0x000000010136372c
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000010136354c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

