//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "RACStream.h"

@class RACSequence;

@interface RACSignal : RACStream
{
}

+ (id)startLazilyWithScheduler:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x000000010144f74c
+ (id)startEagerlyWithScheduler:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x000000010144f674
+ (id)never;	// IMP=0x000000010144f608
+ (id)error:(id)arg1;	// IMP=0x000000010144f5f4
+ (id)createSignal:(CDUnknownBlockType)arg1;	// IMP=0x000000010144f5e0
+ (id)return:(id)arg1;	// IMP=0x000000010144fab8
+ (id)empty;	// IMP=0x000000010144faa4
+ (id)startWithScheduler:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x0000000101452c50
+ (id)start:(CDUnknownBlockType)arg1;	// IMP=0x0000000101452b94
+ (id)startWithScheduler:(id)arg1 subjectBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000001014529ec
+ (id)defer:(CDUnknownBlockType)arg1;	// IMP=0x00000001014489c0
+ (id)if:(id)arg1 then:(id)arg2 else:(id)arg3;	// IMP=0x000000010144800c
+ (id)switch:(id)arg1 cases:(id)arg2 default:(id)arg3;	// IMP=0x0000000101447b38
+ (id)interval:(double)arg1 onScheduler:(id)arg2 withLeeway:(double)arg3;	// IMP=0x00000001014468b4
+ (id)interval:(double)arg1 onScheduler:(id)arg2;	// IMP=0x0000000101446800
+ (id)merge:(id)arg1;	// IMP=0x00000001014448ec
+ (id)combineLatest:(id)arg1 reduce:(CDUnknownBlockType)arg2;	// IMP=0x00000001014446dc
+ (id)combineLatest:(id)arg1;	// IMP=0x00000001014445e0
+ (id)interval:(double)arg1 withLeeway:(double)arg2;	// IMP=0x000000010144ec68
+ (id)interval:(double)arg1;	// IMP=0x000000010144ebe8
- (id)description;	// IMP=0x000000010144fa0c
- (id)zipWith:(id)arg1;	// IMP=0x0000000101450c58
- (id)concat:(id)arg1;	// IMP=0x0000000101450844
- (id)bind:(CDUnknownBlockType)arg1;	// IMP=0x000000010144facc
- (id)subscribeError:(CDUnknownBlockType)arg1 completed:(CDUnknownBlockType)arg2;	// IMP=0x0000000101451f70
- (id)subscribeNext:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;	// IMP=0x0000000101451ed8
- (id)subscribeCompleted:(CDUnknownBlockType)arg1;	// IMP=0x0000000101451e60
- (id)subscribeError:(CDUnknownBlockType)arg1;	// IMP=0x0000000101451de8
- (id)subscribeNext:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2 completed:(CDUnknownBlockType)arg3;	// IMP=0x0000000101451d38
- (id)subscribeNext:(CDUnknownBlockType)arg1 completed:(CDUnknownBlockType)arg2;	// IMP=0x0000000101451ca0
- (id)subscribeNext:(CDUnknownBlockType)arg1;	// IMP=0x0000000101451c30
- (id)subscribe:(id)arg1;	// IMP=0x0000000101451c28
- (id)logCompleted;	// IMP=0x00000001014522b4
- (id)logError;	// IMP=0x000000010145219c
- (id)logNext;	// IMP=0x0000000101452084
- (id)logAll;	// IMP=0x0000000101452008
- (_Bool)asynchronouslyWaitUntilCompleted:(id *)arg1;	// IMP=0x000000010145297c
- (id)asynchronousFirstOrDefault:(id)arg1 success:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x00000001014523cc
- (id)reduceApply;	// IMP=0x000000010144d0f0
- (id)or;	// IMP=0x000000010144cfb8
- (id)and;	// IMP=0x000000010144ce80
- (id)not;	// IMP=0x000000010144cd98
- (id)dematerialize;	// IMP=0x000000010144cbbc
- (id)materialize;	// IMP=0x000000010144c844
- (id)ignoreValues;	// IMP=0x000000010144c798
- (id)sample:(id)arg1;	// IMP=0x000000010144bcec
- (id)retry;	// IMP=0x000000010144bc4c
- (id)retry:(long long)arg1;	// IMP=0x000000010144b898
- (id)all:(CDUnknownBlockType)arg1;	// IMP=0x000000010144b558
- (id)any:(CDUnknownBlockType)arg1;	// IMP=0x000000010144b230
- (id)any;	// IMP=0x000000010144b184
- (id)groupBy:(CDUnknownBlockType)arg1;	// IMP=0x000000010144b0e4
- (id)groupBy:(CDUnknownBlockType)arg1 transform:(CDUnknownBlockType)arg2;	// IMP=0x000000010144a9b4
- (id)deliverOnMainThread;	// IMP=0x000000010144a17c
- (id)subscribeOn:(id)arg1;	// IMP=0x0000000101449e48
- (id)deliverOn:(id)arg1;	// IMP=0x0000000101449790
- (id)timeout:(double)arg1 onScheduler:(id)arg2;	// IMP=0x000000010144919c
- (id)replayLazily;	// IMP=0x0000000101449008
- (id)replayLast;	// IMP=0x0000000101448efc
- (id)replay;	// IMP=0x0000000101448df4
- (id)multicast:(id)arg1;	// IMP=0x0000000101448d08
- (id)publish;	// IMP=0x0000000101448c3c
@property(readonly, nonatomic) RACSequence *sequence;
- (id)toArray;	// IMP=0x0000000101448b20
- (_Bool)waitUntilCompleted:(id *)arg1;	// IMP=0x00000001014488f0
- (id)firstOrDefault:(id)arg1 success:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x0000000101448210
- (id)firstOrDefault:(id)arg1;	// IMP=0x00000001014481fc
- (id)first;	// IMP=0x00000001014481ec
- (id)switchToLatest;	// IMP=0x00000001014476f8
- (id)takeUntilReplacement:(id)arg1;	// IMP=0x00000001014470b8
- (id)takeUntil:(id)arg1;	// IMP=0x0000000101446b04
- (id)setKeyPath:(id)arg1 onObject:(id)arg2 nilValue:(id)arg3;	// IMP=0x0000000101446180
- (id)setKeyPath:(id)arg1 onObject:(id)arg2;	// IMP=0x000000010144611c
- (id)aggregateWithStart:(id)arg1 reduceWithIndex:(CDUnknownBlockType)arg2;	// IMP=0x0000000101445fe4
- (id)aggregateWithStart:(id)arg1 reduce:(CDUnknownBlockType)arg2;	// IMP=0x0000000101445e30
- (id)aggregateWithStartFactory:(CDUnknownBlockType)arg1 reduce:(CDUnknownBlockType)arg2;	// IMP=0x0000000101445bfc
- (id)concat;	// IMP=0x0000000101445b5c
- (id)then:(CDUnknownBlockType)arg1;	// IMP=0x0000000101445a44
- (id)flatten:(unsigned long long)arg1;	// IMP=0x0000000101444c64
- (id)merge:(id)arg1;	// IMP=0x00000001014447b8
- (id)combineLatestWith:(id)arg1;	// IMP=0x0000000101443968
- (id)takeLast:(unsigned long long)arg1;	// IMP=0x0000000101443420
- (id)collect;	// IMP=0x00000001014432c0
- (id)bufferWithTime:(double)arg1 onScheduler:(id)arg2;	// IMP=0x0000000101442a38
- (id)finally:(CDUnknownBlockType)arg1;	// IMP=0x0000000101442894
- (id)initially:(CDUnknownBlockType)arg1;	// IMP=0x0000000101442700
- (id)tryMap:(CDUnknownBlockType)arg1;	// IMP=0x0000000101442560
- (id)try:(CDUnknownBlockType)arg1;	// IMP=0x00000001014423b4
- (id)catchTo:(id)arg1;	// IMP=0x00000001014422a8
- (id)catch:(CDUnknownBlockType)arg1;	// IMP=0x0000000101441d7c
- (id)repeat;	// IMP=0x00000001014418f8
- (id)delay:(double)arg1;	// IMP=0x0000000101441228
- (id)throttle:(double)arg1 valuesPassingTest:(CDUnknownBlockType)arg2;	// IMP=0x0000000101440754
- (id)throttle:(double)arg1;	// IMP=0x0000000101440698
- (id)doCompleted:(CDUnknownBlockType)arg1;	// IMP=0x0000000101440314
- (id)doError:(CDUnknownBlockType)arg1;	// IMP=0x000000010143ff70
- (id)doNext:(CDUnknownBlockType)arg1;	// IMP=0x000000010143fbcc
- (id)executeCommand:(id)arg1;	// IMP=0x000000010144ef20
- (id)aggregateWithStartFactory:(CDUnknownBlockType)arg1 combine:(CDUnknownBlockType)arg2;	// IMP=0x000000010144eec0
- (id)aggregateWithStart:(id)arg1 combine:(CDUnknownBlockType)arg2;	// IMP=0x000000010144ee60
- (id)sequenceNext:(CDUnknownBlockType)arg1;	// IMP=0x000000010144ee54
- (id)ignoreElements;	// IMP=0x000000010144ee48
- (id)toProperty:(id)arg1 onObject:(id)arg2;	// IMP=0x000000010144ede8
- (id)bufferWithTime:(double)arg1;	// IMP=0x000000010144ed6c
- (id)timeout:(double)arg1;	// IMP=0x000000010144ecf0
- (id)let:(CDUnknownBlockType)arg1;	// IMP=0x000000010144e750
- (id)buffer:(unsigned long long)arg1;	// IMP=0x000000010144de80
- (id)windowWithStart:(id)arg1 close:(CDUnknownBlockType)arg2;	// IMP=0x000000010144d3c8

@end

